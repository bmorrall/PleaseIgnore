#!/usr/bin/env ruby
require 'pathname'
require 'json'

# path to your application root.
APP_ROOT = Pathname.new File.expand_path('../../', __FILE__)
require File.join(APP_ROOT, 'lib', 'command')

Dir.chdir APP_ROOT do
  # Configuration

  def env_options(options)
    options.map { |k, v| "-e #{k}=#{v}" }
  end

  def link_options(options)
    options.map { |k, v| "--link #{k}:#{v}" }
  end

  def port_options(options)
    options.map { |k, v| "-p #{k}:#{v}" }
  end

  postgres_user = 'postgres'
  postgres_password = 'mysecretpassword'
  postgres_options = env_options(
    'POSTGRES_USER' => postgres_user,
    'POSTGRES_PASSWORD' => postgres_password
  )

  webapp_options = env_options(
    'CI' => 1,
    'VIRTUAL_HOST' => 'localhost',
    'SIDEKIQ_WORKERS' => 5,
    'ACCOUNTS_EMAIL_ADDRESS' => 'accounts@pleaseignore.com',
    'CONTACT_EMAIL_ADDRESS' => 'contact@pleaseignore.com',
    'SUPPORT_EMAIL_ADDRESS' => 'support@pleaseignore.com',
    'SECRET_KEY_BASE' => '7d3da7d86a58ab7a7ed4817ec46b58e380811b8f7f9ee31e8197ab4e70b7d87b535d5fb89d13cc78266c9d94d1ed7c8dffa56369796a3b7f43b0ec082cbeb1bb',
    'DEVISE_SECRET_KEY' => '0724d3936095acd5e5a17fa5c92983c71e4bda30c5fdb19cfcff954c31c97147a964b5d6905c96b24697f885bc20d654dcb5b17a44c7dd51022593faa5a0531e'
  ) + link_options(
    'mailcatcher' => 'mailcatcher',
    'please_ignore-postgres' => 'postgres',
    'please_ignore-redis' => 'redis'
  )

  # Utils

  def network_settings(container)
    @network_settings ||= {}
    @network_settings.fetch(container) do
      JSON.parse `vagrant ssh -c 'sudo docker inspect -f "{{ json .NetworkSettings }}" #{container}'`
    end
  end

  def container_ip(container)
    network_settings(container)['IPAddress']
  end

  def container_port(_container, port)
    port.split('/').first # ['Ports'][port][0]['HostPort']
  end

  # Init

  puts '== Booting Instance =='
  command 'vagrant up'
  system "vagrant ssh -c 'sudo docker start please_ignore-postgres please_ignore-redis mailcatcher'"

  puts "\n== Building image =="
  command "vagrant ssh -c 'sudo docker build -t please_ignore /vagrant'"

  puts "\n== Starting postgres =="
  postgres_config = postgres_options.join(' ')
  system "vagrant ssh -c 'sudo docker run --name please_ignore-postgres #{postgres_config} -d postgres:9.4.1'"

  puts "\n== Starting redis =="
  system "vagrant ssh -c 'sudo docker run --name please_ignore-redis -d redis:2.8.19'"

  puts "\n== Starting mailcatcher =="
  system "vagrant ssh -c 'sudo docker run -d -p 1080:1080 --name mailcatcher schickling/mailcatcher'"

  puts "\n== Updating config =="
  postgres_ip = container_ip('please_ignore-postgres')
  postgres_port = container_port('please_ignore-postgres', '5432/tcp')
  redis_ip = container_ip('please_ignore-redis')
  redis_port = container_port('please_ignore-redis', '6379/tcp')
  webapp_options += env_options(
    'DATABASE_URL' => "postgres://#{postgres_user}:#{postgres_password}@#{postgres_ip}:#{postgres_port}/",
    'REDIS_URL' => "redis://#{redis_ip}:#{redis_port}/0"
  )

  puts "\n== Migrating database =="
  worker_config = webapp_options.join(' ')
  db_setup_script = 'RAILS_ENV=production bundle exec rake db:migrate'
  command "vagrant ssh -c 'sudo docker run #{worker_config} please_ignore su app -c \"#{db_setup_script}\"'"

  puts "\n== Stopping webapp container =="
  system "vagrant ssh -c 'sudo docker stop please_ignore-webapp &>/dev/null'"
  system "vagrant ssh -c 'sudo docker rm please_ignore-webapp &>/dev/null'"

  puts "\n== Starting webapp =="
  webapp_options += port_options(
    '80' => '80'
  )
  webapp_config = webapp_options.join(' ')
  command "vagrant ssh -c 'sudo docker run -d --name please_ignore-webapp #{webapp_config} please_ignore'"

  puts "\n== Done =="
  command 'open http://localhost:1080/' # mailcatcher
  command 'open http://localhost:8080/' # webapp
end
